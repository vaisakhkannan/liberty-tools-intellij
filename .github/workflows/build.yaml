name: Build

on:
  workflow_dispatch:
  push:
    branches: '**'
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: windows-2019
            iteration: 1
            reportName: windows-test-report-1
          - os: windows-2019
            iteration: 2
            reportName: windows-test-report-2
          - os: windows-2019
            iteration: 3
            reportName: windows-test-report-3
          - os: windows-latest
            iteration: 4
            reportName: windows-test-report-4
          - os: windows-latest
            iteration: 5
            reportName: windows-test-report-5
          - os: windows-latest
            iteration: 6
            reportName: windows-test-report-6
          - os: windows-latest
            iteration: 7
            reportName: windows-test-report-7
          - os: windows-latest
            iteration: 8
            reportName: windows-test-report-8
          - os: windows-latest
            iteration: 9
            reportName: windows-test-report-9
          - os: windows-latest
            iteration: 10
            reportName: windows-test-report-10

    env:
      USE_LOCAL_PLUGIN: ${{ inputs.useLocalPlugin || false }}
      REF_LSP4IJ: ${{ inputs.refLsp4ij }}
      LSP4IJ_BRANCH: ${{ inputs.lsp4ijBranch || 'default' }}
      REF_LTI_TAG: ${{ inputs.refLTITag }}
    steps:
      - name: Configure pagefile
        if: contains(matrix.os, 'windows')
        uses: al-cheb/configure-pagefile-action@v1.2
        with:
          minimum-size: 8GB
          maximum-size: 10GB
          disk-root: "C:"
      - name: 'Checkout lsp4ij'
        uses: actions/checkout@v3
        with:
          repository: MicroShed/lsp4ij
          path: lsp4ij
          ref: refs/tags/0.0.4
      - name: 'Checkout liberty-tools-intellij'
        uses: actions/checkout@v3
        with:
          path: liberty-tools-intellij
      - name: 'Install required integration test software'
        working-directory: ./liberty-tools-intellij
        run: bash ./src/test/resources/ci/scripts/setup.sh
      - name: 'Build lsp4ij jar and publish to local Maven repository'
        working-directory: ./lsp4ij
        run: bash ./gradlew publishToMavenLocal
      - name: 'Build Liberty-Tools-Intellij'
        working-directory: ./liberty-tools-intellij
        run: bash ./gradlew buildPlugin -PuseLocal=${{ env.USE_LOCAL_PLUGIN }}
      - name: 'Archive artifacts'
        if: ${{ runner.os == 'Linux' && !failure() }}
        uses: actions/upload-artifact@v3
        with:
          name: liberty-tools-intellij-${{ github.sha }}-${{ matrix.iteration }}
          path: |
            ./**/*liberty-tools-intellij*.zip
            ./**/libs/*liberty-tools-intellij*.jar
          if-no-files-found: warn
          retention-days: 7
      - name: 'Run UI integration tests'
        id: run_tests
        working-directory: ./liberty-tools-intellij
        run: bash ./src/test/resources/ci/scripts/run.sh
      - name: 'Archive Test logs and reports'
        if: ${{ failure() && steps.run_tests.conclusion == 'failure' }}
        uses: actions/upload-artifact@v4.3.4
        with:
          name: ${{ matrix.reportName }}
          path: |
            liberty-tools-intellij/build/reports/